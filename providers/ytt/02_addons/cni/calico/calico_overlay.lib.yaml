#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("/lib/helpers.star", "get_default_bom_data", "tkg_image_repo")

#@ def startswith(index, left, right):
#@  return left.startswith(right)
#@ end

#@ bomData = get_default_bom_data()

#@ def calicooverlay():

#@overlay/match by=overlay.subset({"kind":"DaemonSet"})
---
kind: DaemonSet
spec:
  template:
    spec:
      initContainers:
        #@overlay/match by=overlay.subset({"name":"upgrade-ipam"})
        - name: upgrade-ipam
          image: #@ "{}/{}:{}".format(tkg_image_repo(), bomData.images.calicoCniImage.imagePath, bomData.images.calicoCniImage.tag)
        #@overlay/match by=overlay.subset({"name":"install-cni"})
        - name: install-cni
          image: #@ "{}/{}:{}".format(tkg_image_repo(), bomData.images.calicoCniImage.imagePath, bomData.images.calicoCniImage.tag)
        #@overlay/match by=overlay.subset({"name":"flexvol-driver"})
        - name: flexvol-driver
          image: #@ "{}/{}:{}".format(tkg_image_repo(), bomData.images.calicoPodDaemonImage.imagePath, bomData.images.calicoPodDaemonImage.tag)
      containers:
        #@overlay/match by=overlay.subset({"name":"calico-node"})
        - name: calico-node
          image: #@ "{}/{}:{}".format(tkg_image_repo(), bomData.images.calicoNodeImage.imagePath, bomData.images.calicoNodeImage.tag)
          env:
            #@overlay/match by=overlay.subset({"name":"CALICO_IPV4POOL_CIDR"})
            - value: #@ data.values.CLUSTER_CIDR
#@ if data.values.PROVIDER_TYPE == "azure":
            #@overlay/match by=overlay.subset({"name":"CALICO_IPV4POOL_IPIP"})
            #@overlay/merge
            - name: CALICO_IPV4POOL_VXLAN
              value: Always
            #@overlay/match by=overlay.subset({"name":"FELIX_IPINIPMTU"})
            #@overlay/remove
            - name: FELIX_IPINIPMTU
          livenessProbe:
            exec:
              command:
                #@overlay/remove
                #@overlay/match by=startswith
                - -bird-live
          readinessProbe:
            exec:
              command:
                #@overlay/remove
                #@overlay/match by=startswith
                - -bird-ready
#@ end

#@overlay/match by=overlay.subset({"kind":"Deployment"})
---
kind: Deployment
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name":"calico-kube-controllers"})
        - image: #@ "{}/{}:{}".format(tkg_image_repo(), bomData.images.calicoKubecontrollerImage.imagePath, bomData.images.calicoKubecontrollerImage.tag)

#@ if data.values.PROVIDER_TYPE == "azure":
#@overlay/match by=overlay.subset({"kind":"ConfigMap"})
---
kind: ConfigMap
data:
  calico_backend: "vxlan"
#@ end

#@ end
